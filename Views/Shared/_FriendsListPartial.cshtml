@model List<Matrix.ViewModels.FriendListViewModel>

<aside id="friends_list" class="friend-panel z-[900] flex h-screen w-[320px] flex-col rounded-xl shadow">
    <div class="friend-search-bar">
        <div class="friend-icon-div">
            <svg class="friend-icon" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path d="M0 0h24v24H0z" fill="none"></path>
                <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"></path>
            </svg>
        </div>
        <input type="text" placeholder="Search friends" class="friend-search-input" v-model="searchFriends" ref="myInput" />
    </div>

    <div class="flex-1 overflow-y-auto">
        <div v-for="friend in filterFriends" :key="friend.UserId">
            <div class="friend-item flex items-center gap-2 px-4 py-2 transition hover:bg-gray-800">
                <img :src="friend.AvatarPath" class="friend-avatar h-8 w-8 rounded-full object-cover" />
                <span class="friend-name">{{friend.UserName}}</span>
            </div>
        </div>
        <div v-if="filterFriends.length === 0" class="p-4 text-text-[#a1a1a1] font-['Roboto'] leading-[16px] outline-none placeholder-[#a1a1a1];">
            查無好友
        </div>
    </div>
</aside>

<script src="https://unpkg.com/vue@3/dist/vue.global.prod.js"></script>
<script>
    const friendData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model));

    const friendApp = Vue.createApp({
        data() {
            return {
                searchFriends: "",
                friends: friendData
            }
        },
        computed: {
            filterFriends() {
                const keyword = this.searchFriends.toLowerCase();
                return this.friends.filter(a =>
                    a.UserName.toLowerCase().includes(keyword)
                );
            }
        }
    });
    friendApp.mount('#friends_list');
</script>
