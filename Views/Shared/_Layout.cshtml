@{  
    ViewData["Title"] = "Matrix";  
}  

<!DOCTYPE html>  
<html lang="@System.Globalization.CultureInfo.CurrentUICulture.Name">  

<head>  
	<meta charset="utf-8" />  
	<meta name="viewport" content="width=device-width, initial-scale=1.0" />  
	<title>Matrix</title>  
	<link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />  
	<link rel="stylesheet" href="~/css/components.css" asp-append-version="true" />  
</head>  

<body class="bg-primary">  
    <div id="app" class="flex">  
        <partial name="_Menu" />  

        <div class="relative flex w-full flex-col gap-4 p-4 pl-0">  
            <main class="text-white">  
                @RenderBody()  
            </main>  
            @* <partial name="_PopUpPartial" /> *@  
            @await Component.InvokeAsync("ShowPopup", new { type = "Collect" })  
            <partial name="_Footer" />  
        </div>  
    </div>  

	<script src="~/lib/jquery/jquery.min.js"></script>  
	<script src="~/lib/vue/dist/vue.global.js"></script>  
	<script src="~/lib/lucide/dist/umd/lucide.min.js"></script>  
	<script>  
		lucide.createIcons();  

        const { createApp, ref } = Vue;  
        createApp({  
            setup() {  
                const isOpen = ref(false);  

                function closeCollectModal() {  
                    isOpen.value = false;  
                }  

                // 可根據需求暴露 openCollectModal  
                function openCollectModal() {  
                    isOpen.value = true;  
                }  

                return {  
                    isOpen,  
                    closeCollectModal,  
                    openCollectModal  
                };  
            }  
        }).mount('#popup-body');  
	</script>  

	@await RenderSectionAsync("Scripts", required: false)  
</body>  

</html>