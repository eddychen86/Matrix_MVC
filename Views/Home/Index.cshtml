@model List<Matrix.Models.Article>
@using Matrix.Services
@inject ICustomLocalizer Localizer
<section class="flex min-h-screen">
    <div id="news_list" class="w-full">
        <!-- 熱門文章輪播 -->
        <div class="mx-auto max-w-3xl">
            <h1 class="section-title">Hot</h1>
        </div>
        <div id="hot_news" class="relative mx-auto mb-8 flex w-max max-w-3xl flex-col items-center">


            <button id="hotPrev" class="absolute top-[50%] -left-12 z-50 flex h-[50px] w-[50px] -translate-y-1/2 transform items-center justify-center rounded-full bg-white text-black shadow transition hover:bg-gray-200 focus:outline-none">
                <svg viewBox="0 0 24 24" class="icon">
                    <path d="M17.77 3.77 16 2 6 12l10 10 1.77-1.77L9.54 12z" />
                </svg>
            </button>

            <button id="hotNext" class="absolute top-[50%] -right-12 z-50 flex h-[50px] w-[50px] -translate-y-1/2 transform items-center justify-center rounded-full bg-white text-black shadow transition hover:bg-gray-200 focus:outline-none">
                <svg viewBox="0 0 24 24" class="icon">
                    <path d="M6.23 20.23 8 22l10-10L8 2 6.23 3.77 14.46 12z" />
                </svg>
            </button>

            <ul class="carousel carousel-center w-[600px] gap-4 text-center">
                @if (ViewBag.HotList != null)
                {
                    foreach (var item in ViewBag.HotList)
                    {
                        <li class="carousel-item h-[250px] w-[190px] overflow-hidden rounded-[30px]">
                            <div class="card bg-base-100 image-full shadow-sm">
                                <figure>
                                    @if (item.image != null)
                                    {
                                        <img src="@item.image.FilePath" alt="@item.Article.Content" class="h-full w-full object-cover" />
                                    }
                                    else
                                    {
                                        <div class="bg-accent flex h-full w-full items-center justify-center">
                                            <i data-lucide="image" class="h-12 w-12 text-gray-400"></i>
                                        </div>
                                    }
                                </figure>
                                <div class="card-body">
                                    <div class="mb-2 flex items-center gap-2">
                                        @if (!string.IsNullOrEmpty(item.Author?.AvatarPath))
                                        {
                                            <img src="@item.Author.AvatarPath" alt="@item.Author.DisplayName" class="h-8 w-8 rounded-full object-cover" />
                                        }
                                        else
                                        {
                                            <div class="bg-orange flex h-8 w-8 items-center justify-center rounded-full">
                                                <span class="text-sm font-bold text-white">@item.Author.DisplayName?.Substring(0, 1).ToUpper()</span>
                                            </div>
                                        }
                                        <h2 class="card-title text-sm">@((item.Author?.DisplayName) ?? item.Author?.UserId.ToString())</h2>
                                    </div>
                                    <div class="card-actions justify-end">
                                        <p class="line-clamp-3 text-xs">@item.Article.Content</p>
                                    </div>
                                </div>
                            </div>
                        </li>
                    }
                }
            </ul>
        </div>


        <!-- 文章列表 -->
        <div id="article_list" class="mx-auto max-w-3xl px-4">

            <div id="postEditorApp" class="flex flex-row">
                <div id="newPost" class="mb-2 flex h-[70px] w-full justify-between">
                    <h3 class="section-title">News</h3>
                </div>
                <!--發文編輯-->
                <button id="openPostBtn" class="w-[95px] h-[40px] flex items-center mt-4 mb-4 text-center gap-1 px-3 bg-white rounded-[12px] text-black text-[20px] leading-[38px] font-['Roboto'] font-medium transition hover:bg-gray-300">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="size-6">
                        <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 14.25v-2.625a3.375 3.375 0 0 0-3.375-3.375h-1.5A1.125 1.125 0 0 1 13.5 7.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H8.25m3.75 9v6m3-3H9m1.5-12H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 0 0-9-9Z" />
                    </svg>
                    Post
                </button>


            </div>


            @if (ViewBag.DefaultList != null)
            {
                @for (int i = 0; i < ViewBag.DefaultList.Count; i++)
                {
                    var item = ViewBag.DefaultList[i];
                    <article class="bg-accent border-accent/20 mb-6 rounded-xl border p-6 transition-colors hover:border-accent/40" data-article-index="@i">
                        @* 文章標題區 *@
                        <div class="mb-4 flex items-center justify-between">
                            <div class="flex items-center gap-3">
                                <div class="bg-orange flex h-10 w-10 items-center justify-center overflow-hidden rounded-full">
                                    @if (item.Author.AvatarPath != null)
                                    {
                                        <img src="@item.Author.AvatarPath" alt="@item.Author.DisplayName" class="h-full w-full object-cover object-center" />
                                    }
                                    else
                                    {
                                        <span class="font-bold text-white">@item.Author.DisplayName?.Substring(0, 1).ToUpper()</span>
                                    }
                        </div>
                        <div>
                            <h3 class="font-medium text-white">@(item.Author?.DisplayName ?? Localizer["GuestAccount"])</h3>
                            <p class="text-sm text-gray-400">@item.Article.CreateTime.ToString("yyyy-MM-dd HH:mm")</p>
                        </div>
                    </div>
                    <div class="flex items-center gap-2 text-sm text-gray-400">
                        <i data-lucide="heart" class="h-4 w-4"></i>
                        <span>@item.Article.PraiseCount</span>
                        <i data-lucide="bookmark" class="ml-2 h-4 w-4"></i>
                        <span>@item.Article.CollectCount</span>
                    </div>
                </div>

                @* 文章內容 *@
                <div class="mb-4 leading-relaxed text-gray-300">
                    @Html.Raw(item.Article.Content?.Length > 300
                                        ? item.Article.Content.Substring(0, 300) + "..."
                                        : item.Article.Content)
                </div>

                @* 文章圖片 *@
                @if (item.image != null)
                    {
                        <div class="mb-4 overflow-hidden rounded-lg">
                            <img src="@item.image.FilePath" alt="" class="max-h-96 w-full object-cover transition-transform duration-300 hover:scale-105" />
                        </div>
                    }

                    @* 文章操作列 *@
                    <div class="border-accent/20 flex items-center justify-between border-t pt-4">
                        <div class="flex items-center gap-4">
                            @if (!ViewBag.IsAuthenticated == true)
                            {
                                <button class="flex items-center gap-2 text-gray-400 transition-colors hover:text-orange">
                                    <i data-lucide="heart" class="h-4 w-4">@Localizer["Praise"]</i>
                                </button>
                                <button class="flex items-center gap-2 text-gray-400 transition-colors hover:text-orange">
                                    <i data-lucide="message-circle" class="h-4 w-4"></i>
                                    <span data-i18n="Comment">@Localizer["Comment"]</span>
                                </button>
                                <button class="flex items-center gap-2 text-gray-400 transition-colors hover:text-orange">
                                    <i data-lucide="share" class="h-4 w-4"></i>
                                    <span data-i18n="Share">@Localizer["Share"]</span>
                                </button>
                                <button class="flex items-center gap-2 text-gray-400 transition-colors hover:text-orange">
                                    <i data-lucide="bookmark" class="h-4 w-4"></i>
                                    <span data-i18n="Collect">@Localizer["Collect"]</span>
                                </button>
                            }
                            else
                            {
                                <span class="flex items-center gap-2 text-sm text-gray-500">
                                    <i data-lucide="lock" class="h-4 w-4"></i>
                                    <span data-i18n="GuestBrowseMsg">@Localizer["GuestBrowseMsg"]</span>
                                </span>
                            }
                        </div>
                    </div>
                </article>
            }
                        }
                        else
            {
                <div class="py-12 text-center">
                    <i data-lucide="inbox" class="mx-auto mb-4 h-16 w-16 text-gray-400"></i>
                    <p class="text-lg text-gray-400" data-i18n="NoArticlesMsg">@Localizer["NoArticlesMsg"]</p>
                </div>
            }

            @* 訪客限制提示（僅在訪客狀態下顯示） *@
            @* @if (ViewBag.IsGuest == true && ViewBag.IsAuthenticated == false)
            {
                <div class="border-accent/20 border-t py-8 text-center">
                    <div class="bg-secondary border-accent/20 rounded-xl border p-6">
                        <h3 class="mb-2 text-lg font-medium text-white" data-i18n="AllContentViewedTitle">@Localizer["AllContentViewedTitle"]</h3>
                        <p class="mb-4 text-gray-400" data-i18n="LoginForMoreContentMsg">@Localizer["LoginForMoreContentMsg"]</p>
                        <a href="/login" class="bg-orange inline-flex items-center gap-2 rounded-full px-6 py-2 text-white transition-colors hover:bg-orange-600">
                            <i data-lucide="log-in" class="h-4 w-4"></i>
                            <span data-i18n="LoginNowBtn">@Localizer["LoginNowBtn"]</span>
                        </a>
                    </div>
                </div>
            } *@
        </div>
    </div>
</section>


<!-- 遮罩 -->
<div id="overlay" class="fixed inset-0 z-[1000] hidden bg-white opacity-20"></div>

<!-- 編輯發文容器 -->
<div id="postModel" class="fixed inset-0 z-[1010] flex hidden items-center justify-center">
    <div class="relative flex max-h-[800px] min-h-[450px] w-[600px] flex-col rounded-[15px] bg-[#161616] p-6 pt-[70px]">
        <!-- 頭像和名字 -->
        <img src="@ViewBag.CurrentUser.Avatar"
             class="absolute top-[25px] left-[24px] h-[32px] w-[34px] rounded-[24px] object-cover object-center"
             alt="@ViewBag.CurrentUser.DisplayName" />
        <div class="absolute top-[30px] left-[69px] text-white text-[18px] font-['Roboto'] font-normal leading-[22px]">
            @ViewBag.CurrentUser.DisplayName
        </div>
        <button id="closePostBtn" class="absolute top-[22px] right-[24px] h-[32px] w-[32px] text-white hover:text-gray-300">
            <svg viewBox="0 0 24 24" class="h-full w-full fill-current">
                <path d="M6 6 L18 18 M6 18 L18 6" stroke="currentColor" stroke-width="2" stroke-linecap="round" />
            </svg>
        </button>
        <!-- 主要內容 -->
        <div class="flex flex-1 flex-col gap-4 pt-[10px] pb-[90px]">
            <textarea class="w-full max-h-[467px] min-h-[150px] resize-none rounded-[10px] bg-white p-4 text-black text-[16px] font-['Source_Sans_Pro'] font-normal leading-[19px] text-justify"
                      placeholder="Write your post here..."></textarea>
            <!-- 檔案預覽區 -->
            <div class="flex flex-wrap items-end gap-2">
                <div class="flex h-[100px] w-[100px] items-center justify-center overflow-hidden rounded-[30px] bg-cover bg-center bg-no-repeat">
                    <img src="https://cataas.com/cat" alt="" class="h-full w-full object-cover" />
                </div>
                <div class="flex h-[40px] w-[60px] items-center justify-center rounded-[20px] bg-[#ffffff]">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" style="fill: rgb(51, 51, 51);" viewBox="0 0 24 24">
                        <path fill="none" d="M0 0h24v24H0z"></path>
                        <path d="m20.41 8.41-4.83-4.83c-.37-.37-.88-.58-1.41-.58H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V9.83c0-.53-.21-1.04-.59-1.42zM7 7h7v2H7V7zm10 10H7v-2h10v2zm0-4H7v-2h10v2z"></path>
                    </svg>
                </div>
            </div>
        </div>

        <!--以選擇的文章hashtag顯示區-->
        <div class="flex w-full flex-col px-6 pb-6">
            <div class="mb-2 flex flex-wrap gap-2">
                <div id="selected-hashtags" class="mb-2 flex max-h-[72px] flex-wrap gap-2 overflow-y-auto"></div>
                <input type="hidden" id="SelectedHashtagsInput" name="SelectedHashtags" />
                <div id="all-hashtags-list" class="absolute bottom-16 left-0 z-50 hidden rounded bg-white p-2 shadow"></div>
            </div>
            <!-- 三個小工具鈕 -->
            <div class="flex items-end justify-between">
                <div class="flex gap-3">
                    <!--上傳檔案-->
                    <button type="button" class="h-[32px] w-[32px] items-center justify-center text-[#a2a2a2] text-[32px] transition-colors duration-200 hover:text-[#c2c2c2]">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-[24px] w-[24px] fill-current" viewBox="0 0 24 24">
                            <path d="M0 0h24v24H0z" fill="none"></path>
                            <path d="M16.5 6v11.5c0 2.21-1.79 4-4 4s-4-1.79-4-4V5a2.5 2.5 0 0 1 5 0v10.5c0 .55-.45 1-1 1s-1-.45-1-1V6H10v9.5a2.5 2.5 0 0 0 5 0V5c0-2.21-1.79-4-4-4S7 2.79 7 5v12.5c0 3.04 2.46 5.5 5.5 5.5s5.5-2.46 5.5-5.5V6h-1.5z"></path>
                        </svg>
                    </button>
                    <!--上傳圖案-->
                    <button type="button" class="h-[32px] w-[32px] items-center justify-center text-[#ff7f3e] text-[32px] transition-colors duration-200 hover:text-[#ff9f66]">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-[24px] w-[24px] fill-current" viewBox="0 0 24 24">
                            <path d="M0 0h24v24H0z" fill="none"></path>
                            <path d="M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z"></path>
                        </svg>
                    </button>
                    <!--選擇hashtag-->
                    <button type="button" id="openHashtagBtn" class="h-[32px] w-[32px] items-center justify-center text-[#ffda78] text-[32px] transition-colors duration-200 hover:text-[#ffe8a8]">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-[24px] w-[24px] fill-current" viewBox="0 0 448 512">
                            <path d="M48 32H197.5C214.5 32 230.7 38.74 242.7 50.75L418.7 226.7C443.7 251.7 443.7 292.3 418.7 317.3L285.3 450.7C260.3 475.7 219.7 475.7 194.7 450.7L18.75 274.7C6.743 262.7 0 246.5 0 229.5V80C0 53.49 21.49 32 48 32L48 32zM112 176C129.7 176 144 161.7 144 144C144 126.3 129.7 112 112 112C94.33 112 80 126.3 80 144C80 161.7 94.33 176 112 176z"></path>
                        </svg>
                    </button>
                </div>
                <button class="flex h-[50px] w-[50px] items-center justify-center rounded-[32px] border-0 bg-[#2a629a] text-white transition duration-200 outline-none hover:bg-[#3476bd]">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"
                         class="h-[24px] w-[24px] fill-current text-white">
                        <path d="M0 0h24v24H0z" fill="none" />
                        <path d="M2.01 21 23 12 2.01 3 2 10l15 2-15 2z" />
                    </svg>
                </button>
            </div>
        </div>

        <!--hashtag選擇視窗-->
        <div id="hashtagModal" class="fixed inset-0 z-[1020] flex hidden items-center justify-center bg-black/40">
            <div class="flex h-[500px] w-[500px] flex-col rounded-xl bg-[#161616] p-4 text-white shadow-lg">
                <h3 class="mb-4 text-xl font-semibold">選擇 Hashtag</h3>
                <div id="hashtagList" class="mb-4 flex-1 overflow-y-auto"></div>
                <div class="flex justify-end gap-2">
                    <button id="confirmHashtagBtn" class="rounded bg-blue-500 px-4 py-1 text-white">確定</button>
                    <button id="closeHashtagModalBtn" class="rounded bg-gray-500 px-4 py-1 text-white">取消</button>
                </div>
            </div>
        </div>
    </div>

</div>





@section Scripts {
    <script>
        // 將 ViewBag 資料傳遞給前端 JavaScript
        window.matrixAuthData = {
            isAuthenticated: @Html.Raw(ViewBag.IsAuthenticated?.ToString().ToLower() ?? "false"),
            isGuest: @Html.Raw(ViewBag.IsGuest?.ToString().ToLower() ?? "false"),
            articleLimit: @(ViewBag.ArticleLimit ?? 10),
            totalArticles: @(ViewBag.TotalPublicArticles ?? 0),
            user: {
                userId: '@ViewBag.CurrentUser.UserId',
                displayName: '@ViewBag.CurrentUser.DisplayName',
                avatar: '@ViewBag.CurrentUser.Avatar'
            }
        };

        @* console.log('Matrix Auth Data:', window.matrixAuthData); *@

        // 為測試目的，可以手動觸發 Popup
        window.testLoginPopup = function() {
            if (window.guestAccessControl) {
                window.guestAccessControl.forceShowPopup();
            }
            else {
                console.log('訪客控制尚未初始化');
            }
        };


        document.addEventListener('DOMContentLoaded', function () {
            let allHashtags = [];
            let selectedHashtags = [];

            const openBtn = document.getElementById('openPostBtn');
            const closeBtn = document.getElementById('closePostBtn');
            const overlay = document.getElementById('overlay');
            const postModel = document.getElementById('postModel');

            const hashtagModal = document.getElementById('hashtagModal');
            const hashtagList = document.getElementById('hashtagList');
            const openHashtagBtn = document.getElementById('openHashtagBtn');
            const closeHashtagModalBtn = document.getElementById('closeHashtagModalBtn');
            const confirmHashtagBtn = document.getElementById('confirmHashtagBtn');

            // 開啟發文視窗
            openBtn.addEventListener('click', function () {
                overlay.classList.remove('hidden');
                postModel.classList.remove('hidden');
            });
            // 關閉發文視窗＋清空已選 Hashtag
            function closePostAndClearTags() {
                overlay.classList.add('hidden');
                postModel.classList.add('hidden');
                selectedHashtags = [];
                renderSelectedHashtags();
            }
            closeBtn.addEventListener('click', closePostAndClearTags);
            overlay.addEventListener('click', closePostAndClearTags);

            // 取得所有 Hashtag
            async function fetchHashtags() {
                if (allHashtags.length > 0) return;
                const res = await fetch('/Post/GetHashtags');
                allHashtags = await res.json();
            }

            // 顯示 hashtag 選擇 modal，並畫出所有 tag
            function renderHashtagModal() {
                hashtagList.innerHTML = '';
                allHashtags.forEach(tag => {
                    const isChecked = selectedHashtags.some(t => t && t.tagId === tag.tagId);
                    const label = document.createElement('label');
                label.className = 'flex items-center gap-2 px-2 py-2 rounded-xl bg-[#232323] hover:bg-gray-800 cursor-pointer min-h-[36px]';
                label.innerHTML = `<input type="checkbox" value="${tag.tagId}" ${isChecked ? 'checked' : ''} class="flex-shrink-0 accent-[#ffda78]">
                    <span class="block max-w-[100px] truncate text-sm">${tag.content}</span>`;
                hashtagList.appendChild(label);
                });
            }

            // 畫出已選 hashtags
            function renderSelectedHashtags() {
                const container = document.getElementById('selected-hashtags');
                container.innerHTML = '';
                selectedHashtags.forEach(tag => {
                    if (!tag) return;
                    const tagSpan = document.createElement('span');
                    tagSpan.className = 'min-h-[32px] min-w-[40px] text-center rounded-full bg-[#ffda78] text-[#333333] text-[14px] leading-[16px] font-medium font-["Roboto"] p-2';
                    tagSpan.textContent = tag.content;
                    container.appendChild(tagSpan);
                });
            }

            // 開啟 hashtag 選擇視窗
            openHashtagBtn.addEventListener('click', async function () {
                await fetchHashtags();
                renderHashtagModal();
                hashtagModal.classList.remove('hidden');
            });

            // 關閉 hashtag 選擇視窗
            closeHashtagModalBtn.addEventListener('click', () => {
                hashtagModal.classList.add('hidden');
            });

            // 按下確定，儲存選取的 tag
            confirmHashtagBtn.addEventListener('click', () => {
                const checks = hashtagList.querySelectorAll('input[type=checkbox]:checked');
                selectedHashtags = Array.from(checks).map(chk => {
                    const tagId = chk.value;
                    return allHashtags.find(t => t.tagId === tagId);
                });
                renderSelectedHashtags();
                hashtagModal.classList.add('hidden');
            });
        });
    </script>
}