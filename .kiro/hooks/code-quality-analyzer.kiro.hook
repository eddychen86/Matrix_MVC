{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and provides automated code quality analysis, including suggestions for improvements in readability, maintainability, and performance while maintaining existing functionality",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "**/*.cs",
      "**/*.js",
      "**/*.scss",
      "**/*.cshtml",
      "**/*.json"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified code files for potential improvements. Focus on:\n\n1. **Code Smells & Anti-patterns**: Identify any code smells, anti-patterns, or violations of SOLID principles\n2. **Design Patterns**: Suggest appropriate design patterns that could improve the code structure\n3. **Best Practices**: Check adherence to C#/.NET, JavaScript, CSS, and Razor view best practices\n4. **Performance**: Identify potential performance bottlenecks and suggest optimizations\n5. **Readability**: Suggest improvements for code clarity, naming conventions, and documentation\n6. **Maintainability**: Recommend changes that would make the code easier to maintain and extend\n7. **Security**: Flag any potential security vulnerabilities or concerns\n8. **Architecture**: Ensure changes align with the layered architecture pattern (Controllers → Services → Data/Models)\n\nFor each suggestion:\n- Explain WHY the change would be beneficial\n- Provide specific code examples where applicable\n- Prioritize suggestions by impact (High/Medium/Low)\n- Ensure suggestions maintain existing functionality\n- Consider the ASP.NET Core 8.0, Entity Framework, and Tailwind CSS stack\n\nPresent findings in a clear, actionable format that helps improve code quality without breaking existing functionality."
  }
}