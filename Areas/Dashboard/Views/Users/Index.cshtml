@{
    ViewData["Title"] = "用戶管理";
}

<div id="adminUser" class="grid h-full w-full grid-cols-4 gap-4">
    <h2 class="col-span-4 text-5xl font-bold text-gray-700">Users Management</h2>
    <!-- 左側欄 -->
    <aside class="col-span-1 flex flex-col gap-8 border-r border-gray-200 bg-white p-8">
        <div class="flex justify-end gap-4">
            <div class="relative w-full">
                <input type="text" 
                       placeholder="Please enter User name" 
                       class="w-full rounded border bg-gray-50 px-3 py-2 focus:ring-2 focus:ring-blue-200 focus:outline-none"
                       v-model="nameFilterInput"
                       >
                <button @@click="applyNameFilter" class="absolute top-1/2 right-4 -translate-y-1/2 cursor-pointer">
                    <i data-lucide="search" class="icon-base"></i>
                </button>
            </div>
        </div>
        <div class="flex w-full flex-col items-center sm:flex-row sm:items-center sm:justify-between">
            <!-- 左側文字 -->
            <label class="font-medium text-gray-700 sm:whitespace-nowrap">Status</label>

            <!-- Enable,Disable按鈕 -->
            <div class="flex w-full gap-2 sm:w-auto">
                <button @@click="toggleStatus(1)" :class="['w-full cursor-pointer rounded px-3 py-2 text-sm font-semibold sm:w-auto sm:px-4 sm:py-1 sm:text-base',
                    statusFilter === 1 ? 'bg-blue-500 text-white hover:bg-blue-700' : 'bg-gray-200 text-gray-600 hover:bg-gray-300']">
                    Enable
                </button>
                <button @@click="toggleStatus(0)" :class="['w-full cursor-pointer rounded px-4 py-1 font-semibold shadow sm:w-auto',
                    statusFilter === 0 ? 'bg-blue-500 text-white hover:bg-blue-700' : 'bg-gray-200 text-gray-600 hover:bg-gray-300']">
                    Disable
                </button>
            </div>
        </div>
        <div class="mt-3 flex w-full flex-col gap-2 sm:flex-row sm:items-center sm:justify-between">
            <!-- 左側文字 -->
            <label class="font-medium text-gray-700 sm:whitespace-nowrap">Ban</label>

            <!-- YES / NO 按鈕 -->
            <div class="flex w-full gap-2 sm:w-auto">
                <button @@click="toggleBanned(true)" :class="['w-full cursor-pointer rounded px-8 py-1 text-sm font-semibold shadow sm:w-auto sm:text-base',
                    bannedFilter === true ? 'bg-blue-500 text-white hover:bg-blue-700' : 'bg-gray-200 text-gray-600 hover:bg-gray-300']">
                    Yes
                </button>
                <button @@click="toggleBanned(false)" :class="['w-full cursor-pointer rounded px-8 py-1 text-sm font-semibold shadow sm:w-auto sm:text-base',
                    bannedFilter === false ? 'bg-blue-500 text-white hover:bg-blue-700' : 'bg-gray-200 text-gray-600 hover:bg-gray-300']">
                    No
                </button>
            </div>
        </div>
        <div>
            <label class="mb-2 block font-medium text-gray-700">Create time</label>
            <input id="calendar" class="w-full rounded border bg-gray-50 px-3 py-2" placeholder="請選擇日期">
        </div>
        <div class="h-40 w-full">
            <calendar-date :value="selectedDate ? formatYMD(selectedDate) : ''" @@change="onCalendarChange" class="cally bg-base-100 border-base-300 rounded-box w-full border shadow-lg">
                <svg aria-label="Previous" class="size-4 fill-current text-[#161616]" slot="previous" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="currentColor" d="M15.75 19.5 8.25 12l7.5-7.5"></path></svg>
                <svg aria-label="Next" class="size-4 fill-current text-[#161616]" slot="next" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="currentColor" d="m8.25 4.5 7.5 7.5-7.5 7.5"></path></svg>
                <calendar-month></calendar-month>
            </calendar-date>
        </div>

    </aside>
    <!-- 右側主表格 -->
    <main class="col-span-3 h-full p-8">
        <div class="h-full w-full rounded-2xl border border-black/10 bg-yellow-50 p-4">
            <table class="table w-full">
                <thead>
                    <tr>
                        @* <th></th> *@
                        <th>Name</th>
                        <th>roleText</th>
                        <th>email</th>
                        <th>status</th>
                        <th>createTime</th>
                        <th>lastLoginTime</th>
                        <th>編輯</th>
                        <th>刪除</th>
                    </tr>
                </thead>
                <tbody class="text-[14px]"> 
                    <tr v-for="(item,idx) in pagedUsers" :key="item.userId">
                        @* <td>{{ (pageIndex - 1) * pageSize + idx + 1 }}</td> *@
                        <td>{{item.userName}}</td>
                        <td>{{item.roleText}}</td>
                        <td>{{item.email}}</td>
                        <td>
                            <template v-if="editingId === item.userId">
                                <select v-model.number="tempStatus"
                                        class="rounded border px-1 py-0">
                                    <option :value="0">未啟用</option>
                                    <option :value="1">已啟用</option>
                                    <option :value="2">被封禁</option>
                                </select>
                            </template>
                            <template v-else>
                                {{ statusText(item.status) }}
                            </template>

                        </td>
                        <td>{{formatDate(item.createTime)}}</td>
                        <td>{{formatDate(item.lastLoginTime)}}</td>

                        <!-- 編輯/確定/取消 -->
                        <td class="w-28 text-center">
                            <template v-if="editingId === item.userId">
                                <div class="flex items-center justify-center gap-2">
                                    <button @@click ="confirmEdit(item)"
                                            :disabled="updating"
                                            class="cursor-pointer rounded bg-green-600 px-2 py-1 text-white hover:bg-green-700 disabled:opacity-50">
                                        update
                                    </button>
                                    <button @@click ="cancelEdit"
                                            :disabled="updating"
                                            class="cursor-pointer rounded bg-gray-300 px-2 py-1 text-gray-800 hover:bg-gray-400 disabled:opacity-50">
                                        cancel
                                    </button>
                                </div>
                            </template>
                            <template v-else>
                                <button @@click ="startEdit(item)"
                                        class="flex cursor-pointer items-center justify-center rounded bg-blue-500 p-1 text-white hover:bg-blue-700">
                                    <!--icon -->
                                    <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="none" stroke="currentColor" stroke-width="2"
                                         stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-pencil-icon lucide-pencil">
                                        <path d="M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z" />
                                        <path d="m15 5 4 4" />
                                    </svg>
                                </button>
                            </template>
                        </td>

                        @* <td class="w-12 text-center">
                            <button onclick="updateStatus" class="flex cursor-pointer items-center justify-center rounded bg-blue-500 p-1 text-white hover:bg-blue-700" title="Edit">
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-pencil-icon lucide-pencil">
                                    <path d="M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z" />
                                    <path d="m15 5 4 4" />
                                </svg>
                            </button>
                        </td> *@
                        <td class="w-12 text-center">
                            <button @@click="deleteUser(item.userId)" class="flex cursor-pointer items-center justify-center rounded bg-red-500 p-1 text-white hover:bg-red-700" title="Delete">
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-ban-icon lucide-ban">
                                    <path d="M4.929 4.929 19.07 19.071" />
                                    <circle cx="12" cy="12" r="10" />
                                </svg>
                            </button>
                    </tr>
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="9">
                            <div class="bg-yellow-50 px-4 py-2">
                                <div class="flex justify-center gap-1">
                                    <button @@click="pageIndex--" :disabled="pageIndex === 1" class="cursor-pointer rounded px-2 py-1 text-gray-500 hover:bg-gray-200">&laquo;</button>

                                    <button v-for="i in totalPages" :key="i"
                                            @@click ="pageIndex = i"
                                            :class="['cursor-pointer rounded px-2 py-1 hover:bg-gray-200', pageIndex === i ? 'bg-blue-100 text-blue-700' : 'text-gray-700 hover:bg-gray-200']">
                                        {{ i }}
                                    </button>

                                    <button @@click="pageIndex++" :disabled="pageIndex === totalPages" class="cursor-pointer rounded px-2 py-1 text-gray-500 hover:bg-gray-200">&raquo;</button>
                                </div>
                            </div>
                        </td>
                    </tr>
                </tfoot>

            </table>
        </div>
    </main>
</div>


@section Scripts{
    <script>
        const { createApp, ref, computed, onMounted } = Vue

        const app = createApp({
          setup() {
            //名字篩選用
            const nameFilterInput = ref("")  //輸入框暫存
            const nameFilter = ref("")   //真正篩選用

            //搜尋方法
            const applyNameFilter = () =>{
                nameFilter.value = nameFilterInput.value.trim()
                pageIndex.value = 1
            }

            const users = ref([])
            const pageIndex = ref(1)
            const pageSize = ref(10)

            const editingId = ref(null)
            const tempStatus = ref(0)
            const updating = ref(false)
            //篩選 + 分頁
            const filteredUsers = computed(() => {
                let arr = users.value
                if (statusFilter.value !== null) {
                    arr = arr.filter(u => u.status === statusFilter.value)
                    return arr
                }
                if (bannedFilter.value !== null) {
                    arr = bannedFilter.value
                    ? arr.filter(u => u.status === 2)     // Yes → 被封禁
                    : arr.filter(u => u.status !== 2)     // No  → 非封禁
                }
                return arr
                })

            const totalPages = computed(() => Math.max(1, Math.ceil(filteredUsers.value.length / pageSize.value)))
            const pagedUsers = computed(() => {
              const start = (pageIndex.value - 1) * pageSize.value
              return filteredUsers.value.slice(start, start + pageSize.value)
            })

        

            const statusText = (value) =>({
                0: "未啟用",
                1: "已啟用",
                2: "被封禁"
            }[value] ?? value)

            const formatDate = (datetime) => {
              const date = new Date(datetime)
              return date.toLocaleDateString() + ' ' + date.toLocaleTimeString()
            }
            //Ban
            const statusFilter = ref(null)  // 1=Enable, 0=Disable
            const bannedFilter = ref(null)  // true=yes, false=no

            //Status change
            function toggleStatus(v){
                statusFilter.value = (statusFilter.value === v) ? null : v
                bannedFilter.value = null
                pageIndex.value = 1
            }
            //Ban change
            function toggleBanned(v){
                  bannedFilter.value = (bannedFilter.value === v) ? null : v
                  statusFilter.value = null
                  pageIndex.value = 1
            }



            const selectedDate = ref(null)
            const lastYmd = ref(null)

            //轉YYYY-MM-DD字串給後端
            function formatYMD(dt)
            {
                const d = new Date(dt)
                const y = d.getFullYear()
                const m = String(d.getMonth()+1).padStart(2, '0')
                const day = String(d.getDate()).padStart(2, '0')
                return `${y}-${m}-${day}`
            }

            const fetchUsers = async (dateYmd = null) => {
                try {
            const qs = dateYmd ? `?createDate=${dateYmd}` : ''
            const response = await fetch(`/api/ApiUser${qs}`)
                if (!response.ok) throw new Error('API 錯誤')
            const data = await response.json()
            users.value = data
            pageIndex.value = 1
                }catch (error) {
            console.error('載入失敗：', error)
                }
            }
            //月曆

            const onCalendarChange = (e) =>{
                const raw = e?.detail?.value ?? e?.target?.value
                if (!raw){
                    selectedDate.value = null
                    lastYmd.value = null
                    fetchUsers(null)
                    return
                }
                const ymd = formatYMD(new Date(raw))
                if(lastYmd.value === ymd){
                    //點第二次同一天,取消篩選
                    selectedDate.value = null
                    lastYmd.value = null
                    fetchUsers(null)
                }else{
                    //第一天或換一天,設定篩選
                    selectedDate.value = new Date(raw)
                    lastYmd.value = ymd
                    fetchUsers(ymd)
                }

                // selectedDate.value = new Date(raw)
                // const ymd = formatYMD(selectedDate.value)
                // fetchUsers(ymd)
            }

            const deleteUser = (id) => {
                if(!confirm("你確定要刪除嗎?要不要再考慮一下"))return;

                fetch(`/api/ApiUser/${id}`,{
                    method: 'DELETE'
                })
                .then(response => {
                    if(!response.ok)throw new Error("刪除失敗囉")
                    users.value = users.value.filter(u => u.userId !== id)
                })
                .catch(err =>{
                    console.log("刪除錯誤!!");
                });

            }

            const startEdit = (item) => {
                editingId.value = item.userId
                tempStatus.value = item.status
            }

            const cancelEdit = () => {
                editingId.value = null
                tempStatus.value = 0
            }

            const confirmEdit = async (item) => {
                if(updating.value) return
                updating.value = true
                try {
             // API：PUT 更改status狀態
            const res = await fetch(`/api/ApiUser/${item.userId}`, {
                method: 'PUT',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ status: tempStatus.value })
            })
            if(!res.ok){
                const text = await res.text()
                throw Error("更新失敗")
            }

            const index = users.value.findIndex(u => u.userId === item.userId)
            if(index > -1)users.value[index].status = tempStatus.value

            cancelEdit()
            }
            catch(err)
            {
                console.error("更新錯誤",err)
                alert("更新失敗:" + err.message)
            }
            finally{
                updating.value = false
            }

            }

            onMounted(() => fetchUsers(null))

            return {
              users,
              pageIndex,
              pageSize,
              totalPages,
              pagedUsers,
              formatDate,
              deleteUser,
              editingId,
              tempStatus,
              updating,
              statusText,
              startEdit,
              cancelEdit,
              confirmEdit,
              onCalendarChange,
              selectedDate,
              formatYMD,
              statusFilter,
              bannedFilter,
              toggleStatus,
              toggleBanned,
              nameFilterInput,
              nameFilter,
              applyNameFilter

            }
          }
        })
        app.config.compilerOptions.isCustomElement = tag =>
          tag === 'calendar-date' || tag === 'calendar-month'

        app.mount('#adminUser')
    </script>

}

