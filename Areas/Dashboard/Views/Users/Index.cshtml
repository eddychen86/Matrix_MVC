@{
    ViewData["Title"] = "用戶管理";
}

<div id="adminUser" class="flex border border-gray-300 bg-white shadow-lg">
    <!-- 左側欄 -->
    <aside class="flex w-1/4 min-w-[260px] flex-col gap-8 border-r border-gray-200 bg-white p-8">
        <div>
            <h2 class="mb-4 text-2xl font-bold text-gray-700">Users Management</h2>
        </div>
        <div>
            <label class="mb-2 block font-medium text-gray-700">User name</label>
            <input type="text" class="w-full rounded border bg-gray-50 px-3 py-2 focus:ring-2 focus:ring-blue-200 focus:outline-none" placeholder="Please enter User name">
        </div>
        <div class="flex w-full items-center justify-between">
            <!-- 左側文字 -->
            <label class="font-medium whitespace-nowrap text-gray-700">Status</label>

            <!-- 右側按鈕區塊 -->
            <div class="flex gap-2">
                <button class="rounded bg-blue-500 px-4 py-1 font-semibold text-white shadow hover:bg-blue-700">Enable</button>
                <button class="rounded bg-gray-200 px-4 py-1 font-semibold text-gray-600 hover:bg-gray-300">Disable</button>
            </div>
        </div>
        <div class="flex w-full items-center justify-between">
            <!-- 左側文字 -->
            <label class="font-medium whitespace-nowrap text-gray-700">Ban</label>

            <!-- 右側按鈕區塊 -->
            <div class="flex gap-2">
                <button class="rounded bg-blue-500 px-[31px] py-1 font-semibold text-white shadow hover:bg-blue-700">Yes</button>
                <button class="rounded bg-gray-200 px-[31px] py-1 font-semibold text-gray-600 hover:bg-gray-300">No</button>
            </div>
        </div>
        <div>
            <label class="mb-2 block font-medium text-gray-700">Create time</label>
            <input id="calendar" class="w-full rounded border bg-gray-50 px-3 py-2" placeholder="請選擇日期">
        </div>
        <div class="h-40 w-full">
            <calendar-date class="cally bg-base-100 border-base-300 rounded-box w-full border shadow-lg">
                <svg aria-label="Previous" class="size-4 fill-current text-[#161616]" slot="previous" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="currentColor" d="M15.75 19.5 8.25 12l7.5-7.5"></path></svg>
                <svg aria-label="Next" class="size-4 fill-current text-[#161616]" slot="next" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24"><path fill="currentColor" d="m8.25 4.5 7.5 7.5-7.5 7.5"></path></svg>
                <calendar-month></calendar-month>
            </calendar-date>
        </div>

    </aside>
    <!-- 右側主表格 -->
    <main class="flex-1 p-8">
        <div class="h-full w-full rounded-2xl border border-black/10 bg-yellow-50 p-4">
            <table class="table w-full">
                <thead>
                    <tr>
                        @* <th></th> *@
                        <th>Name</th>
                        <th>roleText</th>
                        <th>email</th>
                        <th>status</th>
                        <th>createTime</th>
                        <th>lastLoginTime</th>
                        <th>編輯</th>
                        <th>刪除</th>
                    </tr>
                </thead>
                <tbody class="text-[14px]"> 
                    <tr v-for="(item,idx) in pagedUsers" :key="item.userId">
                        @* <td>{{ (pageIndex - 1) * pageSize + idx + 1 }}</td> *@
                        <td>{{item.userName}}</td>
                        <td>{{item.roleText}}</td>
                        <td>{{item.	email}}</td>
                        <td>{{item.status}}</td>
                        <td>{{formatDate(item.createTime)}}</td>
                        <td>{{formatDate(item.lastLoginTime)}}</td>
                        <td class="w-12 text-center">
                            <button class="flex cursor-pointer items-center justify-center rounded bg-blue-500 p-1 text-white hover:bg-blue-700" title="Edit">
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-pencil-icon lucide-pencil">
                                    <path d="M21.174 6.812a1 1 0 0 0-3.986-3.987L3.842 16.174a2 2 0 0 0-.5.83l-1.321 4.352a.5.5 0 0 0 .623.622l4.353-1.32a2 2 0 0 0 .83-.497z" />
                                    <path d="m15 5 4 4" />
                                </svg>
                            </button>
                        </td>
                        <td class="w-12 text-center">
                            <button @@click="deleteUser(item.userId)" class="flex cursor-pointer items-center justify-center rounded bg-red-500 p-1 text-white hover:bg-red-700" title="Delete">
                                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="lucide lucide-ban-icon lucide-ban">
                                    <path d="M4.929 4.929 19.07 19.071" />
                                    <circle cx="12" cy="12" r="10" />
                                </svg>
                            </button>
                    </tr>
                </tbody>
                <tfoot>
                    <tr>
                        <td colspan="9">
                            <div class="bg-yellow-50 px-4 py-2">
                                <div class="flex justify-center gap-1">
                                    <button @@click="pageIndex--" :disabled="pageIndex === 1" class="cursor-pointer rounded px-2 py-1 text-gray-500 hover:bg-gray-200">&laquo;</button>

                                    <button v-for="i in totalPages" :key="i"
                                            @@click ="pageIndex = i"
                                            :class="['cursor-pointer rounded px-2 py-1 hover:bg-gray-200', pageIndex === i ? 'bg-blue-100 text-blue-700' : 'text-gray-700 hover:bg-gray-200']">
                                        {{ i }}
                                    </button>

                                    <button @@click="pageIndex++" :disabled="pageIndex === totalPages" class="cursor-pointer rounded px-2 py-1 text-gray-500 hover:bg-gray-200">&raquo;</button>
                                </div>
                            </div>
                        </td>
                    </tr>
                </tfoot>

            </table>
        </div>
    </main>
</div>


@section Scripts{
    <script>
        const { createApp, ref, computed, onMounted } = Vue

        const app = createApp({
          setup() {
            const users = ref([])
            const pageIndex = ref(1)
            const pageSize = ref(12)

            const totalPages = computed(() => Math.ceil(users.value.length / pageSize.value))
            const pagedUsers = computed(() => {
              const start = (pageIndex.value - 1) * pageSize.value
              return users.value.slice(start, start + pageSize.value)
            })

            const formatDate = (datetime) => {
              const date = new Date(datetime)
              return date.toLocaleDateString() + ' ' + date.toLocaleTimeString()
            }

            const fetchUsers = async () => {
              try {
                const response = await fetch('/api/ApiUser')
                if (!response.ok) throw new Error('API 錯誤')
                const data = await response.json()
                users.value = data
              } catch (error) {
                console.error('載入失敗：', error)
              }
            }
            const deleteUser = (id) => {
                if(!confirm("你確定要刪除嗎?要不要再考慮一下"))return;

                fetch(`/api/ApiUser/${id}`,{
                    method: 'DELETE'
                })
                .then(response => {
                    if(!response.ok)throw new Error("刪除失敗囉")
                    users.value = users.value.filter(u => u.userId !== id)
                })
                .catch(err =>{
                    console.log("刪除錯誤!!");
                });

            }


            onMounted(fetchUsers)

            return {
              users,
              pageIndex,
              pageSize,
              totalPages,
              pagedUsers,
              formatDate,
              deleteUser
            }
          }
        })

        app.mount('#adminUser')
    </script>

}

